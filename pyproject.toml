[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "context_menu_toolkit"
readme = "README.md"
version = "0.1.0rc5"
authors = [
  { name="Ori Shamir", email="orishamir04@gmail.com" },
]
description = "Create windows context menus Pythonically"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
]
license = "MIT"

dependencies = [
    "pydantic==2.*",
    "dataclasses",
]

[dependency-groups]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-panzoom-plugin",
]
test = [
    "pytest",
    "parameterized",
]
lint = [
    "ruff",
]
typechecking = [
    "mypy",
    "pyright",
]

[project.urls]
Homepage = "https://github.com/orishamir/WindowsContextMenus"

[tool.hatch.build]
exclude = [
  "/.*",
  "/design",
  "/examples",
]

[tool.mypy]
python_version = "3.12"
files = [
    "context_menu_toolkit/",
]

[tool.pyright]
pythonVersion = "3.12"
include = [
    "context_menu_toolkit/",
]
typeCheckingMode = "strict"

[tool.ruff]
extend-exclude = ["examples"]
indent-width = 4
line-length = 140
output-format = "grouped"

[tool.ruff.lint]
select = [
    "F",    # pyflakes
    "N",    # pep8-naming
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "B",    # flake8-bugbear
    "ANN",  # flake8-annotations
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "ISC",  # flake8-implicit-str-concat
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "ARG",  # flake8-unused-arguments
    "I",    # isort
    "E",    # pycodestyle-error
    "W",    # pycodestyle-warning
    "D",    # pydocstyle
    "PL",   # pylint (all)
    "UP",   # pyupgrade
]
ignore = [
    "D100", "D102", "D104", "D105",
    "E501",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"!tests/**" = ["PT"]  # disable PT everywhere except tests

[tool.ruff.lint.pydocstyle]
convention = "google"
